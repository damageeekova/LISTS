    #include <iostream>
    using namespace std;

     struct  node{
       long long int data;
       node* next;
       node* prev;
     };

     class deque{
          node* head;
          node* tail;

      public:

        deque(long long x = 0): head(new node), tail(NULL){
            head -> data = x;
            tail = head;
        }

        deque(const deque &A){
            node* p = A.head;
            if (A.tail != NULL){
                node* temp = new node;
                temp -> data = A.head -> data;
                tail = temp;
                head = temp;
                p = p -> next;
                while (p != NULL){
                    push_back (p -> data);
                    p = p -> next;
                }
            }
        }

        void push_front(long long int x){
            node* temp = new node;
            head -> prev = temp;
            temp -> next = head;
            temp -> data = x;
            head = temp;
            }


        void push_back(long long int x){
            node* temp = new node;
            temp -> prev = tail;
            tail -> next = temp;
            temp -> data = x;
            tail = temp;
            temp -> next = NULL;
            }


        long long int pop_front(){
            if (head != NULL){
                node* temp = head;
                if (head != tail) {
                    head = temp -> next;
                    head->prev = NULL;
                    return temp -> data;
            }
            }
        }


        long long int pop_back (){
            if (tail != NULL){
                node* temp = tail;
                if (head == tail){
                    head = NULL;
                    tail = head;
                    return temp -> data;
                    }
                else {
                    tail = temp -> prev;
                    return temp -> data;
                    tail -> next = NULL;
                    }
            }
        }



        bool empty (){
            if (head == NULL && tail == NULL)
                return 1;
            else
                return 0;
             }

        long long int front (){
            if (head == NULL){
            return 0;
            }
            return head -> data;
            }

        long long int back (){
            if (head == NULL){
            return 0;
            }
            return tail -> data;
            }

        ~deque(){
            while (head != tail){
                node* temp = head -> next;
                delete head;
                head = temp;
                head -> prev = NULL;
            }
            node* temp = head;
            delete temp;
            head = NULL;
            tail = head;
        }

        void print (){
            cout << endl;
            node* temp = tail;
            while (temp != head ){
                    cout << temp -> data << " ";
                    temp = temp -> prev;
            }
            cout << temp -> data;
        }
    };






    int main(){
        deque deq;
        deq.push_front(1);
        deq.push_front(2);
        deq.push_front(3);
        deq.print();
        deque DEQ(deq);
        DEQ.print();
        DEQ.pop_front();
        DEQ.print();
        deq.pop_front();
        deq.print();
        deq.push_back(3);
        deq.print();
        deq.pop_back();
        deq.print();
    }
